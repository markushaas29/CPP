In file included from Test.cpp:9:
../MatrixProjector.hpp: In instantiation of ‘decltype(auto) MatrixProjector<T, P>::operator[](size_t) const [with T = Matrix<2, MatrixDescriptor<2, int> >; P = std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >; size_t = long unsigned int]’:
Test.cpp:59:0:   required from here
../MatrixProjector.hpp:42:32: error: inconsistent deduction for auto return type: ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ and then ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../MatrixProjector.hpp:42:77: error: no matching function for call to ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::tuple(MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >)’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1259:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::pair<_U1, _U2>&&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1259 |         tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1259:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1251:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::pair<_U1, _U2>&&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1251 |         tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1251:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1244:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::pair<_U1, _U2>&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1244 |         tuple(allocator_arg_t __tag, const _Alloc& __a,
      |         ^~~~~
/usr/include/c++/11/tuple:1244:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1236:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::pair<_U1, _U2>&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1236 |         tuple(allocator_arg_t __tag, const _Alloc& __a,
      |         ^~~~~
/usr/include/c++/11/tuple:1236:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1229:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_U1, _U2>&&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1229 |         tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1229:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1221:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_U1, _U2>&&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1221 |         tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1221:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1212:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_U1, _U2>&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1212 |         tuple(allocator_arg_t __tag, const _Alloc& __a,
      |         ^~~~~
/usr/include/c++/11/tuple:1212:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1202:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_U1, _U2>&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1202 |         tuple(allocator_arg_t __tag, const _Alloc& __a,
      |         ^~~~~
/usr/include/c++/11/tuple:1202:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1196:9: note: candidate: ‘template<class _Alloc> constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_T1, _T2>&&) [with _Alloc = _Alloc; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1196 |         tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1196:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1191:9: note: candidate: ‘template<class _Alloc> constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_T1, _T2>&) [with _Alloc = _Alloc; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1191 |         tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1191:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 3 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1184:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, _U1&&, _U2&&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1184 |         tuple(allocator_arg_t __tag, const _Alloc& __a,
      |         ^~~~~
/usr/include/c++/11/tuple:1184:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 4 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1176:9: note: candidate: ‘template<class _Alloc, class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, _U1&&, _U2&&) [with _Alloc = _Alloc; _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1176 |         tuple(allocator_arg_t __tag, const _Alloc& __a, _U1&& __a1, _U2&& __a2)
      |         ^~~~~
/usr/include/c++/11/tuple:1176:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 4 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1169:9: note: candidate: ‘template<class _Alloc, bool _Dummy, typename std::enable_if<std::_TupleConstraints<_Dummy, Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_explicitly_constructible<const Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>&, const Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double>&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const _T1&, const _T2&) [with _Alloc = _Alloc; bool _Dummy = _Dummy; typename std::enable_if<std::_TupleConstraints<_Dummy, _T1, _T2>::__is_explicitly_constructible<const _T1&, const _T2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1169 |         tuple(allocator_arg_t __tag, const _Alloc& __a,
      |         ^~~~~
/usr/include/c++/11/tuple:1169:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 4 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1161:9: note: candidate: ‘template<class _Alloc, bool _Dummy, typename std::enable_if<std::_TupleConstraints<_Dummy, Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_implicitly_constructible<const Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>&, const Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double>&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const _T1&, const _T2&) [with _Alloc = _Alloc; bool _Dummy = _Dummy; typename std::enable_if<std::_TupleConstraints<_Dummy, _T1, _T2>::__is_implicitly_constructible<const _T1&, const _T2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1161 |         tuple(allocator_arg_t __tag, const _Alloc& __a,
      |         ^~~~~
/usr/include/c++/11/tuple:1161:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 4 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1155:9: note: candidate: ‘template<class _Alloc, typename std::enable_if<std::_TupleConstraints<std::is_object<_Alloc>::value, Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_implicitly_default_constructible(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&) [with _Alloc = _Alloc; typename std::enable_if<std::_TupleConstraints<std::is_object<_Alloc>::value, _T1, _T2>::__is_implicitly_default_constructible(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1155 |         tuple(allocator_arg_t __tag, const _Alloc& __a)
      |         ^~~~~
/usr/include/c++/11/tuple:1155:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 2 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1145:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1145 |         tuple(pair<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1145:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘std::pair<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1137:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1137 |         tuple(pair<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1137:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘std::pair<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1130:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1130 |         tuple(const pair<_U1, _U2>& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1130:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘const std::pair<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1123:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1123 |         tuple(const pair<_U1, _U2>& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1123:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘const std::pair<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1116:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1116 |         tuple(tuple<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1116:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘std::tuple<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1109:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1109 |         tuple(tuple<_U1, _U2>&& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1109:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘std::tuple<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1102:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::tuple<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_explicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1102 |         tuple(const tuple<_U1, _U2>& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1102:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘const std::tuple<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1095:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::tuple<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<true, _T1, _T2>::__is_implicitly_constructible<const _U1&, const _U2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1095 |         tuple(const tuple<_U1, _U2>& __in)
      |         ^~~~~
/usr/include/c++/11/tuple:1095:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ is not derived from ‘const std::tuple<_T1, _T2>’
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1084:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::_TupleConstraints<(! __is_alloc_arg<_U1>()), Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<(! __is_alloc_arg<_U1>()), _T1, _T2>::__is_explicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1084 |         tuple(_U1&& __a1, _U2&& __a2)
      |         ^~~~~
/usr/include/c++/11/tuple:1084:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 2 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1077:9: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::_TupleConstraints<(! __is_alloc_arg<_U1>()), Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::_TupleConstraints<(! __is_alloc_arg<_U1>()), _T1, _T2>::__is_implicitly_constructible<_U1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1077 |         tuple(_U1&& __a1, _U2&& __a2)
      |         ^~~~~
/usr/include/c++/11/tuple:1077:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 2 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1070:9: note: candidate: ‘template<bool _Dummy, typename std::enable_if<std::_TupleConstraints<_Dummy, Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_explicitly_constructible<const Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>&, const Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double>&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&) [with bool _Dummy = _Dummy; typename std::enable_if<std::_TupleConstraints<_Dummy, _T1, _T2>::__is_explicitly_constructible<const _T1&, const _T2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1070 |         tuple(const _T1& __a1, const _T2& __a2)
      |         ^~~~~
/usr/include/c++/11/tuple:1070:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 2 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1063:9: note: candidate: ‘template<bool _Dummy, typename std::enable_if<std::_TupleConstraints<_Dummy, Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_implicitly_constructible<const Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>&, const Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double>&>(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&) [with bool _Dummy = _Dummy; typename std::enable_if<std::_TupleConstraints<_Dummy, _T1, _T2>::__is_implicitly_constructible<const _T1&, const _T2&>(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1063 |         tuple(const _T1& __a1, const _T2& __a2)
      |         ^~~~~
/usr/include/c++/11/tuple:1063:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 2 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1056:9: note: candidate: ‘template<bool _Dummy, typename std::enable_if<std::_TupleConstraints<_Dummy, Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_explicitly_default_constructible(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple() [with bool _Dummy = _Dummy; typename std::enable_if<std::_TupleConstraints<_Dummy, _T1, _T2>::__is_explicitly_default_constructible(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1056 |         tuple()
      |         ^~~~~
/usr/include/c++/11/tuple:1056:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 0 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1049:9: note: candidate: ‘template<bool _Dummy, typename std::enable_if<std::_TupleConstraints<_Dummy, Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >::__is_implicitly_default_constructible(), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple() [with bool _Dummy = _Dummy; typename std::enable_if<std::_TupleConstraints<_Dummy, _T1, _T2>::__is_implicitly_default_constructible(), bool>::type <anonymous> = <anonymous>; _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1049 |         tuple()
      |         ^~~~~
/usr/include/c++/11/tuple:1049:9: note:   template argument deduction/substitution failed:
In file included from Test.cpp:9:
../MatrixProjector.hpp:42:77: note:   candidate expects 0 arguments, 1 provided
   42 |                         return MatrixProjector<decltype(m),ProjectionType>(m);
      |                                                                             ^
In file included from Test.cpp:4:
/usr/include/c++/11/tuple:1090:17: note: candidate: ‘constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_T1, _T2>&&) [with _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1090 |       constexpr tuple(tuple&&) = default;
      |                 ^~~~~
/usr/include/c++/11/tuple:1090:23: note:   no known conversion for argument 1 from ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ to ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >&&’
 1090 |       constexpr tuple(tuple&&) = default;
      |                       ^~~~~~~
/usr/include/c++/11/tuple:1088:17: note: candidate: ‘constexpr std::tuple<_T1, _T2>::tuple(const std::tuple<_T1, _T2>&) [with _T1 = Quantity<Unit<1>, PureBase<1> >; _T2 = Quantity<Unit<0, 0, 1> >]’
 1088 |       constexpr tuple(const tuple&) = default;
      |                 ^~~~~
/usr/include/c++/11/tuple:1088:23: note:   no known conversion for argument 1 from ‘MatrixProjector<Matrix<1, MatrixDescriptor<1, int> >, std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> > >’ to ‘const std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >&’
 1088 |       constexpr tuple(const tuple&) = default;
      |                       ^~~~~~~~~~~~
Test.cpp: In function ‘int main()’:
Test.cpp:66: error: no match for ‘operator<<’ (operand types are ‘std::basic_ostream<char>’ and ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’)
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:108:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  108 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |       ^~~~~~~~
/usr/include/c++/11/ostream:108:36: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘std::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)’ {aka ‘std::basic_ostream<char>& (*)(std::basic_ostream<char>&)’}
  108 |       operator<<(__ostream_type& (*__pf)(__ostream_type&))
      |                  ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/ostream:117:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]’
  117 |       operator<<(__ios_type& (*__pf)(__ios_type&))
      |       ^~~~~~~~
/usr/include/c++/11/ostream:117:32: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘std::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)’ {aka ‘std::basic_ios<char>& (*)(std::basic_ios<char>&)’}
  117 |       operator<<(__ios_type& (*__pf)(__ios_type&))
      |                  ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/usr/include/c++/11/ostream:127:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  127 |       operator<<(ios_base& (*__pf) (ios_base&))
      |       ^~~~~~~~
/usr/include/c++/11/ostream:127:30: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘std::ios_base& (*)(std::ios_base&)’
  127 |       operator<<(ios_base& (*__pf) (ios_base&))
      |                  ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
/usr/include/c++/11/ostream:166:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  166 |       operator<<(long __n)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:166:23: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘long int’
  166 |       operator<<(long __n)
      |                  ~~~~~^~~
/usr/include/c++/11/ostream:170:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  170 |       operator<<(unsigned long __n)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:170:32: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘long unsigned int’
  170 |       operator<<(unsigned long __n)
      |                  ~~~~~~~~~~~~~~^~~
/usr/include/c++/11/ostream:174:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  174 |       operator<<(bool __n)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:174:23: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘bool’
  174 |       operator<<(bool __n)
      |                  ~~~~~^~~
In file included from /usr/include/c++/11/ostream:829,
                 from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/bits/ostream.tcc:91:5: note: candidate: ‘std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>]’
   91 |     basic_ostream<_CharT, _Traits>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/ostream.tcc:92:22: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘short int’
   92 |     operator<<(short __n)
      |                ~~~~~~^~~
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:181:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  181 |       operator<<(unsigned short __n)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:181:33: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘short unsigned int’
  181 |       operator<<(unsigned short __n)
      |                  ~~~~~~~~~~~~~~~^~~
In file included from /usr/include/c++/11/ostream:829,
                 from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/bits/ostream.tcc:105:5: note: candidate: ‘std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]’
  105 |     basic_ostream<_CharT, _Traits>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/ostream.tcc:106:20: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘int’
  106 |     operator<<(int __n)
      |                ~~~~^~~
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:192:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  192 |       operator<<(unsigned int __n)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:192:31: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘unsigned int’
  192 |       operator<<(unsigned int __n)
      |                  ~~~~~~~~~~~~~^~~
/usr/include/c++/11/ostream:201:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  201 |       operator<<(long long __n)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:201:28: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘long long int’
  201 |       operator<<(long long __n)
      |                  ~~~~~~~~~~^~~
/usr/include/c++/11/ostream:205:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  205 |       operator<<(unsigned long long __n)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:205:37: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘long long unsigned int’
  205 |       operator<<(unsigned long long __n)
      |                  ~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/11/ostream:220:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  220 |       operator<<(double __f)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:220:25: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘double’
  220 |       operator<<(double __f)
      |                  ~~~~~~~^~~
/usr/include/c++/11/ostream:224:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  224 |       operator<<(float __f)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:224:24: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘float’
  224 |       operator<<(float __f)
      |                  ~~~~~~^~~
/usr/include/c++/11/ostream:232:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  232 |       operator<<(long double __f)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:232:30: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘long double’
  232 |       operator<<(long double __f)
      |                  ~~~~~~~~~~~~^~~
/usr/include/c++/11/ostream:245:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  245 |       operator<<(const void* __p)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:245:30: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘const void*’
  245 |       operator<<(const void* __p)
      |                  ~~~~~~~~~~~~^~~
/usr/include/c++/11/ostream:250:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::nullptr_t = std::nullptr_t]’
  250 |       operator<<(nullptr_t)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:250:18: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘std::nullptr_t’
  250 |       operator<<(nullptr_t)
      |                  ^~~~~~~~~
/usr/include/c++/11/ostream:257:7: note: candidate: ‘std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const volatile void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]’
  257 |       operator<<(const volatile void* __p)
      |       ^~~~~~~~
/usr/include/c++/11/ostream:257:39: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘const volatile void*’
  257 |       operator<<(const volatile void* __p)
      |                  ~~~~~~~~~~~~~~~~~~~~~^~~
In file included from /usr/include/c++/11/ostream:829,
                 from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/bits/ostream.tcc:119:5: note: candidate: ‘std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]’
  119 |     basic_ostream<_CharT, _Traits>::
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/11/bits/ostream.tcc:120:34: note:   no known conversion for argument 1 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘std::basic_ostream<char>::__streambuf_type*’ {aka ‘std::basic_streambuf<char>*’}
  120 |     operator<<(__streambuf_type* __sbin)
      |                ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from ../../CSV/../Quantity/../Common/Make/Make.hpp:2,
                 from ../../CSV/../Quantity/Quantity.hpp:8,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../../CSV/../Quantity/../Common/Make/../ParseResult.hpp:20:15: note: candidate: ‘template<class T> std::ostream& operator<<(std::ostream&, const ParseResult<T>&)’
   20 | std::ostream& operator<<(std::ostream& strm, const ParseResult<T>& p){  return p.Display(strm);}
      |               ^~~~~~~~
../../CSV/../Quantity/../Common/Make/../ParseResult.hpp:20:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const ParseResult<T>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../../CSV/../Quantity/Quantity.hpp:154:15: note: candidate: ‘template<class U, class QR, class T1> std::ostream& operator<<(std::ostream&, const Quantity<U, QR, T1>&)’
  154 | std::ostream& operator<<(std::ostream& out, const Quantity<U,QR,T1>& q)
      |               ^~~~~~~~
../../CSV/../Quantity/Quantity.hpp:154:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const Quantity<U, QR, T1>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../../CSV/Element.hpp:41:15: note: candidate: ‘template<class T> std::ostream& operator<<(std::ostream&, const Element<T>&)’
   41 | std::ostream& operator<<(std::ostream& out, const Element<T>& e) {      return out<<e.Value();}
      |               ^~~~~~~~
../../CSV/Element.hpp:41:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const Element<T>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../MatrixElement.hpp:4,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../../CSV/Elements.hpp:171:15: note: candidate: ‘template<class D, class U, class T> std::ostream& operator<<(std::ostream&, const Value<D, U, T>&)’
  171 | std::ostream& operator<<(std::ostream& out, const Value<D,U,T>& c) { return out<<D::Key<<"\t"<<c.GetQuantity(); }
      |               ^~~~~~~~
../../CSV/Elements.hpp:171:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const Value<D, U, T>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../MatrixElement.hpp:5,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../../Calculator/CalculatorResult.hpp:124:23: note: candidate: ‘template<class D, class L, class R, class V> std::ostream& operator<<(std::ostream&, Result<D, L, R, V>)’
  124 |         std::ostream& operator<<(std::ostream& strm, const Result<D,L,R,V> cr)  {       return cr.Display(strm);}
      |                       ^~~~~~~~
../../Calculator/CalculatorResult.hpp:124:23: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘Result<D, L, R, V>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../MatrixParser.hpp:10,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../../Common/DateTimes.hpp:274:15: note: candidate: ‘template<class T, class TC> std::ostream& operator<<(std::ostream&, const DateTimes::DateTimeBase<T1, T2, 3000, 1, unsigned int, unsigned int>&)’
  274 | std::ostream& operator<<(std::ostream& out, const DateTimes::DateTimeBase<T,TC>& s){    return out<<s.Value();  }
      |               ^~~~~~~~
../../Common/DateTimes.hpp:274:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const DateTimes::DateTimeBase<T1, T2, 3000, 1, unsigned int, unsigned int>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Calculator/../File/TransferContainer.hpp:9,
                 from ../../Calculator/../File/Transfer.hpp:10,
                 from ../../Calculator/../File/TransferItemContainer.hpp:10,
                 from ../../Calculator/../File/Account.hpp:9,
                 from ../../Calculator/../File/Raiffeisenbank.hpp:6,
                 from ../../Calculator/Operations.hpp:8,
                 from ../MatrixOperations.hpp:13,
                 from ../MatrixCalculator.hpp:5,
                 from ../Matrix.hpp:10,
                 from Test.cpp:6:
../../Calculator/../File/../Common/BaseContainer.hpp:46:15: note: candidate: ‘template<class Derived, class T> std::ostream& operator<<(std::ostream&, const BaseContainer<Derived, T>&)’
   46 | std::ostream& operator<<(std::ostream& strm, const BaseContainer<Derived,T>& c){        return c.Display(strm);}
      |               ^~~~~~~~
../../Calculator/../File/../Common/BaseContainer.hpp:46:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const BaseContainer<Derived, T>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Calculator/../File/Account.hpp:9,
                 from ../../Calculator/../File/Raiffeisenbank.hpp:6,
                 from ../../Calculator/Operations.hpp:8,
                 from ../MatrixOperations.hpp:13,
                 from ../MatrixCalculator.hpp:5,
                 from ../Matrix.hpp:10,
                 from Test.cpp:6:
../../Calculator/../File/TransferItemContainer.hpp:133:15: note: candidate: ‘template<class KeyIndexContainerType, class Tuple, unsigned int Idx> std::ostream& operator<<(std::ostream&, const TransferItemContainer<KeyIndexContainerType, Tuple, Idx>&)’
  133 | std::ostream& operator<<(std::ostream& strm, const TransferItemContainer<KeyIndexContainerType,Tuple, Idx>& c){ return c.Display(strm);}
      |               ^~~~~~~~
../../Calculator/../File/TransferItemContainer.hpp:133:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const TransferItemContainer<KeyIndexContainerType, Tuple, Idx>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Calculator/../File/../String/Parser.hpp:6,
                 from ../../Calculator/../File/Raiffeisenbank.hpp:15,
                 from ../../Calculator/Operations.hpp:8,
                 from ../MatrixOperations.hpp:13,
                 from ../MatrixCalculator.hpp:5,
                 from ../Matrix.hpp:10,
                 from Test.cpp:6:
../../Calculator/../File/../String/AtomContainer.hpp:91:15: note: candidate: ‘template<class Head, class ... Tail> std::ostream& operator<<(std::ostream&, AtomContainer<Head, Tail ...>)’
   91 | std::ostream& operator<<(std::ostream& strm, const AtomContainer<Head,Tail...> c)
      |               ^~~~~~~~
../../Calculator/../File/../String/AtomContainer.hpp:91:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘AtomContainer<Head, Tail ...>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:3,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostResult.hpp:46:15: note: candidate: ‘template<class Q> std::ostream& operator<<(std::ostream&, const ItemFraction<Q>&)’
   46 | std::ostream& operator<<(std::ostream& out, const ItemFraction<Q>& s){  return s.Display(out);  }
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostResult.hpp:46:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const ItemFraction<Q>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:3,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostResult.hpp:92:15: note: candidate: ‘template<class S, class F, class D, class Q, class A> std::ostream& operator<<(std::ostream&, const AncilliaryRentalCostItemResult<S, F, D, Q, A>&)’
   92 | std::ostream& operator<<(std::ostream& out, const AncilliaryRentalCostItemResult<S,F,D,Q,A>& s){        return s.Display(out);  }
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostResult.hpp:92:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const AncilliaryRentalCostItemResult<S, F, D, Q, A>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:11,
                 from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:4,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../CounterConfiguration.hpp:66:15: note: candidate: ‘template<class MeterType, int No, class U, class A> std::ostream& operator<<(std::ostream&, const CounterConfiguration<MeterType, No, U, A>&)’
   66 | std::ostream& operator<<(std::ostream& strm, const CounterConfiguration<MeterType,No,U,A>& c){  return c.Display(strm);}
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../CounterConfiguration.hpp:66:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const CounterConfiguration<MeterType, No, U, A>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/../Counter.hpp:20,
                 from ../../Common/../Home/AncilliaryRentalCosts/../CounterContainer.hpp:11,
                 from ../../Common/../Home/AncilliaryRentalCosts/../StageConfiguration.hpp:10,
                 from ../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:13,
                 from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:4,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../Reading.hpp:61:15: note: candidate: ‘template<class U, class Pre, class Q, class DateT> std::ostream& operator<<(std::ostream&, const Reading<U, Pre, Q, DateT>&)’
   61 | std::ostream& operator<<(std::ostream& strm, const Reading<U,Pre,Q,DateT>& r){  return r.Display(strm);}
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../Reading.hpp:61:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const Reading<U, Pre, Q, DateT>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/../Counter.hpp:20,
                 from ../../Common/../Home/AncilliaryRentalCosts/../CounterContainer.hpp:11,
                 from ../../Common/../Home/AncilliaryRentalCosts/../StageConfiguration.hpp:10,
                 from ../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:13,
                 from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:4,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../Reading.hpp:95:15: note: candidate: ‘template<class C, class T, class DateT> std::ostream& operator<<(std::ostream&, Reading<C, T, DateT>)’
   95 | std::ostream& operator<<(std::ostream& strm, const Reading<C,T,DateT> c)        {       return c.Display(strm);}
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../Reading.hpp:95:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘Reading<C, T, DateT>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/../Counter.hpp:21,
                 from ../../Common/../Home/AncilliaryRentalCosts/../CounterContainer.hpp:11,
                 from ../../Common/../Home/AncilliaryRentalCosts/../StageConfiguration.hpp:10,
                 from ../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:13,
                 from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:4,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../ReadingContainer.hpp:79:15: note: candidate: ‘template<class T> std::ostream& operator<<(std::ostream&, const ReadingContainer<T>&)’
   79 | std::ostream& operator<<(std::ostream& strm, const ReadingContainer<T>& c){     return c.Display(strm);}
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../ReadingContainer.hpp:79:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const ReadingContainer<T>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/../CounterContainer.hpp:11,
                 from ../../Common/../Home/AncilliaryRentalCosts/../StageConfiguration.hpp:10,
                 from ../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:13,
                 from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:4,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../Counter.hpp:172:15: note: candidate: ‘template<class C, class S> std::ostream& operator<<(std::ostream&, const Counter<C>&)’
  172 | std::ostream& operator<<(std::ostream& strm, const Counter<C>& c){      return c.Display(strm);}
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../Counter.hpp:172:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const Counter<C>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/../StageConfiguration.hpp:10,
                 from ../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:13,
                 from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:4,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../CounterContainer.hpp:111:15: note: candidate: ‘template<class Head, class ... Tail> std::ostream& operator<<(std::ostream&, const CounterContainer<Head, Tail ...>&)’
  111 | std::ostream& operator<<(std::ostream& strm, const CounterContainer<Head,Tail...>& c){  return c.Display(strm); }
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../CounterContainer.hpp:111:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const CounterContainer<Head, Tail ...>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:4,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:114:15: note: candidate: ‘template<class C, class S> std::ostream& operator<<(std::ostream&, Stage<C>)’
  114 | std::ostream& operator<<(std::ostream& strm, const Stage<C> c){ return c.Display(strm);}
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../Stage.hpp:114:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘Stage<C>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:5,
                 from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/../StageContainer.hpp:178:15: note: candidate: ‘template<class Head, class ... Tail> std::ostream& operator<<(std::ostream&, StageContainer<Head, Tail ...>)’
  178 | std::ostream& operator<<(std::ostream& strm, const StageContainer<Head,Tail...> c){     return c.Display(strm);}
      |               ^~~~~~~~
../../Common/../Home/AncilliaryRentalCosts/../StageContainer.hpp:178:15: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘StageContainer<Head, Tail ...>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../../Common/ShortNames.hpp:6,
                 from Test.cpp:10:
../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:71: note: candidate: ‘template<class S, class D, class Q> std::ostream& operator<<(std::ostream&, const AncilliaryRentalCostItemBase<S, D, Q>&)’
   71 | std::ostream& operator<<(std::ostream& out, const AncilliaryRentalCostItemBase<S,D,Q>& s){      return s.Display(out);  }
      | 
../../Common/../Home/AncilliaryRentalCosts/AncilliaryRentalCostItems.hpp:71: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const AncilliaryRentalCostItemBase<S, D, Q>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/basic_string.h:48,
                 from /usr/include/c++/11/string:55,
                 from /usr/include/c++/11/bits/locale_classes.h:40,
                 from /usr/include/c++/11/bits/ios_base.h:41,
                 from /usr/include/c++/11/ios:42,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/string_view:667:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::basic_string_view<_CharT, _Traits>)’
  667 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^~~~~~~~
/usr/include/c++/11/string_view:667:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/string:55,
                 from /usr/include/c++/11/bits/locale_classes.h:40,
                 from /usr/include/c++/11/bits/ios_base.h:41,
                 from /usr/include/c++/11/ios:42,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/bits/basic_string.h:6531:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 6531 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^~~~~~~~
/usr/include/c++/11/bits/basic_string.h:6531:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/ios_base.h:46,
                 from /usr/include/c++/11/ios:42,
                 from /usr/include/c++/11/ostream:38,
                 from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/system_error:279:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)’
  279 |     operator<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
      |     ^~~~~~~~
/usr/include/c++/11/system_error:279:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const std::error_code&’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:513:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)’
  513 |     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:513:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’)
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:518:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)’
  518 |     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:518:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:524:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)’
  524 |     operator<<(basic_ostream<char, _Traits>& __out, char __c)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:524:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:530:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)’
  530 |     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:530:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘signed char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:535:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)’
  535 |     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:535:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘unsigned char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:544:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, wchar_t)’ (deleted)
  544 |     operator<<(basic_ostream<char, _Traits>&, wchar_t) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:544:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘wchar_t’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:549:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char8_t)’ (deleted)
  549 |     operator<<(basic_ostream<char, _Traits>&, char8_t) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:549:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘char8_t’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:554:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char16_t)’ (deleted)
  554 |     operator<<(basic_ostream<char, _Traits>&, char16_t) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:554:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘char16_t’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:558:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char32_t)’ (deleted)
  558 |     operator<<(basic_ostream<char, _Traits>&, char32_t) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:558:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘char32_t’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:564:5: note: candidate: ‘template<class _Traits> std::basic_ostream<wchar_t, _Traits>& std::operator<<(std::basic_ostream<wchar_t, _Traits>&, char8_t)’ (deleted)
  564 |     operator<<(basic_ostream<wchar_t, _Traits>&, char8_t) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:564:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   mismatched types ‘wchar_t’ and ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:569:5: note: candidate: ‘template<class _Traits> std::basic_ostream<wchar_t, _Traits>& std::operator<<(std::basic_ostream<wchar_t, _Traits>&, char16_t)’ (deleted)
  569 |     operator<<(basic_ostream<wchar_t, _Traits>&, char16_t) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:569:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   mismatched types ‘wchar_t’ and ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:573:5: note: candidate: ‘template<class _Traits> std::basic_ostream<wchar_t, _Traits>& std::operator<<(std::basic_ostream<wchar_t, _Traits>&, char32_t)’ (deleted)
  573 |     operator<<(basic_ostream<wchar_t, _Traits>&, char32_t) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:573:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   mismatched types ‘wchar_t’ and ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:594:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)’
  594 |     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:594:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   mismatched types ‘const _CharT*’ and ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/ostream:829,
                 from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/bits/ostream.tcc:321:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)’
  321 |     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
      |     ^~~~~~~~
/usr/include/c++/11/bits/ostream.tcc:321:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const char*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:611:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)’
  611 |     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:611:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const char*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:624:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)’
  624 |     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:624:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const signed char*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:629:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)’
  629 |     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:629:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const unsigned char*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:638:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const wchar_t*)’ (deleted)
  638 |     operator<<(basic_ostream<char, _Traits>&, const wchar_t*) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:638:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const wchar_t*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:643:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char8_t*)’ (deleted)
  643 |     operator<<(basic_ostream<char, _Traits>&, const char8_t*) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:643:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const char8_t*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:648:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char16_t*)’ (deleted)
  648 |     operator<<(basic_ostream<char, _Traits>&, const char16_t*) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:648:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const char16_t*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:652:5: note: candidate: ‘template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char32_t*)’ (deleted)
  652 |     operator<<(basic_ostream<char, _Traits>&, const char32_t*) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:652:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘const char32_t*’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:658:5: note: candidate: ‘template<class _Traits> std::basic_ostream<wchar_t, _Traits>& std::operator<<(std::basic_ostream<wchar_t, _Traits>&, const char8_t*)’ (deleted)
  658 |     operator<<(basic_ostream<wchar_t, _Traits>&, const char8_t*) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:658:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   mismatched types ‘wchar_t’ and ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:663:5: note: candidate: ‘template<class _Traits> std::basic_ostream<wchar_t, _Traits>& std::operator<<(std::basic_ostream<wchar_t, _Traits>&, const char16_t*)’ (deleted)
  663 |     operator<<(basic_ostream<wchar_t, _Traits>&, const char16_t*) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:663:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   mismatched types ‘wchar_t’ and ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:667:5: note: candidate: ‘template<class _Traits> std::basic_ostream<wchar_t, _Traits>& std::operator<<(std::basic_ostream<wchar_t, _Traits>&, const char32_t*)’ (deleted)
  667 |     operator<<(basic_ostream<wchar_t, _Traits>&, const char32_t*) = delete;
      |     ^~~~~~~~
/usr/include/c++/11/ostream:667:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   mismatched types ‘wchar_t’ and ‘char’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/iostream:39,
                 from Test.cpp:1:
/usr/include/c++/11/ostream:750:5: note: candidate: ‘template<class _Ostream, class _Tp> _Ostream&& std::operator<<(_Ostream&&, const _Tp&)’
  750 |     operator<<(_Ostream&& __os, const _Tp& __x)
      |     ^~~~~~~~
/usr/include/c++/11/ostream:750:5: note:   template argument deduction/substitution failed:
/usr/include/c++/11/ostream: In substitution of ‘template<class _Ostream, class _Tp> _Ostream&& std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >]’:
Test.cpp:66:0:   required from here
/usr/include/c++/11/ostream:750:5: error: template constraint failure for ‘template<class _Os, class _Tp>  requires (__derived_from_ios_base<_Os>) && requires(_Os& __os, const _Tp& __t) {__os << __t;} using __rvalue_stream_insertion_t = _Os&&’
/usr/include/c++/11/ostream:750:5: note: constraints not satisfied
/usr/include/c++/11/ostream: In substitution of ‘template<class _Os, class _Tp>  requires (__derived_from_ios_base<_Os>) && requires(_Os& __os, const _Tp& __t) {__os << __t;} using __rvalue_stream_insertion_t = _Os&& [with _Os = std::basic_ostream<char>&; _Tp = std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >]’:
/usr/include/c++/11/ostream:750:5:   required by substitution of ‘template<class _Ostream, class _Tp> _Ostream&& std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >]’
Test.cpp:66:0:   required from here
/usr/include/c++/11/ostream:717:13:   required for the satisfaction of ‘__derived_from_ios_base<_Os>’ [with _Os = std::basic_ostream<char, std::char_traits<char> >&]
/usr/include/c++/11/ostream:717:39: note: the expression ‘is_class_v<_Tp> [with _Tp = std::basic_ostream<char, std::char_traits<char> >&]’ evaluated to ‘false’
  717 |     concept __derived_from_ios_base = is_class_v<_Tp>
      |                                       ^~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from Test.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:1003:5: note: candidate: ‘template<class _CharT, class _Traits, class _Tp, class _Dp> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::unique_ptr<_Up, _Ep>&) requires requires{std::operator<<::__os << std::operator<<::__p->get();}’
 1003 |     operator<<(basic_ostream<_CharT, _Traits>& __os,
      |     ^~~~~~~~
/usr/include/c++/11/bits/unique_ptr.h:1003:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const std::unique_ptr<_Up, _Ep>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/memory:77,
                 from Test.cpp:5:
/usr/include/c++/11/bits/shared_ptr.h:70:5: note: candidate: ‘template<class _Ch, class _Tr, class _Tp, __gnu_cxx::_Lock_policy _Lp> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__shared_ptr<_Tp, _Lp>&)’
   70 |     operator<<(std::basic_ostream<_Ch, _Tr>& __os,
      |     ^~~~~~~~
/usr/include/c++/11/bits/shared_ptr.h:70:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘const std::__shared_ptr<_Tp, _Lp>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:79:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Resetiosflags)’
   79 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Resetiosflags __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:79:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘std::_Resetiosflags’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:109:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setiosflags)’
  109 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setiosflags __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:109:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘std::_Setiosflags’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:143:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setbase)’
  143 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setbase __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:143:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘std::_Setbase’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:178:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>)’
  178 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:178:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘std::_Setfill<_CharT>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:208:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision)’
  208 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setprecision __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:208:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘std::_Setprecision’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:238:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw)’
  238 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:238:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘it2’ (type ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’) to type ‘std::_Setw’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:311:5: note: candidate: ‘template<class _CharT, class _Traits, class _MoneyT> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_money<_MoneyT>)’
  311 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_money<_MoneyT> __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:311:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘std::_Put_money<_MoneyT>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/c++/11/bits/fs_path.h:39,
                 from /usr/include/c++/11/filesystem:45,
                 from ../../CSV/../Quantity/../Math/Math.hpp:8,
                 from ../../CSV/../Quantity/QuantityRatio.hpp:3,
                 from ../../CSV/../Quantity/Quantity.hpp:4,
                 from ../../CSV/Element.hpp:4,
                 from ../MatrixElement.hpp:3,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/iomanip:363:5: note: candidate: ‘template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_time<_CharT>)’
  363 |     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_time<_CharT> __f)
      |     ^~~~~~~~
/usr/include/c++/11/iomanip:363:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ is not derived from ‘std::_Put_time<_CharT>’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from /usr/include/boost/config/compiler/gcc.hpp:165,
                 from /usr/include/boost/config.hpp:39,
                 from /usr/include/boost/mpl/aux_/config/msvc.hpp:19,
                 from /usr/include/boost/mpl/aux_/config/adl.hpp:17,
                 from /usr/include/boost/mpl/aux_/adl_barrier.hpp:17,
                 from /usr/include/boost/mpl/bool_fwd.hpp:17,
                 from /usr/include/boost/mpl/bool.hpp:17,
                 from /usr/include/boost/mpl/not.hpp:17,
                 from /usr/include/boost/mpl/is_sequence.hpp:17,
                 from /usr/include/boost/mpl/for_each.hpp:17,
                 from ../../CSV/Elements.hpp:7,
                 from ../MatrixElement.hpp:4,
                 from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
/usr/include/c++/11/cstddef:126:5: note: candidate: ‘template<class _IntegerType> constexpr std::__byte_op_t<_IntegerType> std::operator<<(std::byte, _IntegerType)’
  126 |     operator<<(byte __b, _IntegerType __shift) noexcept
      |     ^~~~~~~~
/usr/include/c++/11/cstddef:126:5: note:   template argument deduction/substitution failed:
Test.cpp:66: note:   cannot convert ‘std::operator<< <std::char_traits<char> >(std::cout, ((const char*)"E"))’ (type ‘std::basic_ostream<char>’) to type ‘std::byte’
   66 |         std::cout<<"E"<<it2<<std::endl;
      | 
In file included from ../MatrixParser.hpp:4,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../MatrixElement.hpp:21:15: note: candidate: ‘std::ostream& operator<<(std::ostream&, const IMatrixElement&)’
   21 | std::ostream& operator<<(std::ostream& out, const IMatrixElement& e) {  return e.Display(out); }
      |               ^~~~~~~~
../MatrixElement.hpp:21:67: note:   no known conversion for argument 2 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘const IMatrixElement&’
   21 | std::ostream& operator<<(std::ostream& out, const IMatrixElement& e) {  return e.Display(out); }
      |                                             ~~~~~~~~~~~~~~~~~~~~~~^
In file included from ../MatrixParser.hpp:10,
                 from ../MatrixDescriptor.hpp:5,
                 from ../Matrix_Ref.hpp:3,
                 from ../Matrix.hpp:5,
                 from Test.cpp:6:
../../Common/DateTimes.hpp:276:15: note: candidate: ‘std::ostream& operator<<(std::ostream&, const DateTimes::Date&)’
  276 | std::ostream& operator<<(std::ostream& out, const DateTimes::Date& d){  return d.Display(out);  }
      |               ^~~~~~~~
../../Common/DateTimes.hpp:276:68: note:   no known conversion for argument 2 from ‘std::tuple<Quantity<Unit<1, 0, 0, 0, 0, 0, 0, 0>, PureBase<1>, double>, Quantity<Unit<0, 0, 1, 0, 0, 0, 0, 0>, PureBase<1>, double> >’ to ‘const DateTimes::Date&’
  276 | std::ostream& operator<<(std::ostream& out, const DateTimes::Date& d){  return d.Display(out);  }
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~^
make: *** [<eingebaut>: *.o] Fehler 1

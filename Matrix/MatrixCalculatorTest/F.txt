In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:92:7: error: default template arguments may not be used in partial specializations
   92 | class MatrixCalculator<Matrix<2,D1>, Matrix<2,D2>> : public MatrixCalculatorBase<MatrixCalculator,2,Matrix<2,D1>, Matrix<2,D2>>
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../MatrixCalculator.hpp:92:7: error: template parameters not deducible in partial specialization:
../MatrixCalculator.hpp:92:7: note:         ‘S’
../MatrixCalculator.hpp:112:7: error: default template arguments may not be used in partial specializations
  112 | class MatrixCalculator<Matrix<2,D1>, Matrix<1,D2>> : public MatrixCalculatorBase<MatrixCalculator,1,Matrix<2,D1>, Matrix<1,D2>>
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../MatrixCalculator.hpp:112:7: error: template parameters not deducible in partial specialization:
../MatrixCalculator.hpp:112:7: note:         ‘S’
../MatrixCalculator.hpp:131:7: error: default template arguments may not be used in partial specializations
  131 | class MatrixCalculator<Matrix<1,D1>, Matrix<1,D2>>: public MatrixCalculatorBase<MatrixCalculator,2,Matrix<1,D1>, Matrix<1,D2>>
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../MatrixCalculator.hpp:131:7: error: template parameters not deducible in partial specialization:
../MatrixCalculator.hpp:131:7: note:         ‘S’
In file included from Test.cpp:6:
../Matrix.hpp: In instantiation of ‘class Matrix<1>’:
Test.cpp:27:0:   required from here
../Matrix.hpp:25:50: error: redeclared with 2 template parameters
   25 |         template<typename,typename> friend class MatrixCalculator;
      |                                                  ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:84:7: note: previous declaration ‘template<class M1, class M2, long unsigned int S> class MatrixCalculator’ used 3 template parameters
   84 | class MatrixCalculator
      |       ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:17:53: error: template parameter ‘template<class, class, long unsigned int <anonymous> > class T’
   17 | template<template<typename, typename, size_t> class T, uint N, typename M1, typename M2>
      |                                                     ^
In file included from Test.cpp:6:
../Matrix.hpp:26:95: note: redeclared here as ‘template<class, class> class T’
   26 |         template<template<typename, typename> class T, uint, typename, typename> friend class MatrixCalculatorBase;
      |                                                                                               ^~~~~~~~~~~~~~~~~~~~
../Matrix.hpp: In instantiation of ‘class Matrix<2>’:
Test.cpp:31:0:   required from here
../Matrix.hpp:25:50: error: redeclared with 2 template parameters
   25 |         template<typename,typename> friend class MatrixCalculator;
      |                                                  ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:84:7: note: previous declaration ‘template<class M1, class M2, long unsigned int S> class MatrixCalculator’ used 3 template parameters
   84 | class MatrixCalculator
      |       ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:17:53: error: template parameter ‘template<class, class, long unsigned int <anonymous> > class T’
   17 | template<template<typename, typename, size_t> class T, uint N, typename M1, typename M2>
      |                                                     ^
In file included from Test.cpp:6:
../Matrix.hpp:26:95: note: redeclared here as ‘template<class, class> class T’
   26 |         template<template<typename, typename> class T, uint, typename, typename> friend class MatrixCalculatorBase;
      |                                                                                               ^~~~~~~~~~~~~~~~~~~~
../Matrix.hpp: In instantiation of ‘class Matrix<1, MatrixDescriptor<1, double> >’:
Test.cpp:38:0:   required from here
../Matrix.hpp:25:50: error: redeclared with 2 template parameters
   25 |         template<typename,typename> friend class MatrixCalculator;
      |                                                  ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:84:7: note: previous declaration ‘template<class M1, class M2, long unsigned int S> class MatrixCalculator’ used 3 template parameters
   84 | class MatrixCalculator
      |       ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:17:53: error: template parameter ‘template<class, class, long unsigned int <anonymous> > class T’
   17 | template<template<typename, typename, size_t> class T, uint N, typename M1, typename M2>
      |                                                     ^
In file included from Test.cpp:6:
../Matrix.hpp:26:95: note: redeclared here as ‘template<class, class> class T’
   26 |         template<template<typename, typename> class T, uint, typename, typename> friend class MatrixCalculatorBase;
      |                                                                                               ^~~~~~~~~~~~~~~~~~~~
In file included from Test.cpp:6:
../Matrix.hpp: In instantiation of ‘decltype(auto) Matrix<<anonymous>, <template-parameter-1-2> >::operator*(const Matrix<N2, D2>&) [with long unsigned int N2 = 1; D2 = MatrixDescriptor<1, double>; long unsigned int N = 1; DT = MatrixDescriptor<1, double>]’:
Test.cpp:42:0:   required from here
../Matrix.hpp:136:101: error: ‘multiply’ is not a member of ‘Matrix<1, MatrixDescriptor<1, double> >::MC<Matrix<1, MatrixDescriptor<1, double> > >’ {aka ‘MatrixCalculator<Matrix<1, MatrixDescriptor<1, double> >, Matrix<1, MatrixDescriptor<1, double> >, 1>’}
  136 |         decltype(auto) operator*(const Matrix<N2, D2>& m)       { return MC<Matrix<N2,D2>>::multiply(*this,m);          }
      |                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from Test.cpp:6:
../Matrix.hpp: In instantiation of ‘class Matrix<2, MatrixDescriptor<2, double> >’:
Test.cpp:44:0:   required from here
../Matrix.hpp:25:50: error: redeclared with 2 template parameters
   25 |         template<typename,typename> friend class MatrixCalculator;
      |                                                  ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:84:7: note: previous declaration ‘template<class M1, class M2, long unsigned int S> class MatrixCalculator’ used 3 template parameters
   84 | class MatrixCalculator
      |       ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:17:53: error: template parameter ‘template<class, class, long unsigned int <anonymous> > class T’
   17 | template<template<typename, typename, size_t> class T, uint N, typename M1, typename M2>
      |                                                     ^
In file included from Test.cpp:6:
../Matrix.hpp:26:95: note: redeclared here as ‘template<class, class> class T’
   26 |         template<template<typename, typename> class T, uint, typename, typename> friend class MatrixCalculatorBase;
      |                                                                                               ^~~~~~~~~~~~~~~~~~~~
In file included from Test.cpp:6:
../Matrix.hpp: In instantiation of ‘decltype(auto) Matrix<<anonymous>, <template-parameter-1-2> >::operator*(const Matrix<N2, D2>&) [with long unsigned int N2 = 2; D2 = MatrixDescriptor<2, double>; long unsigned int N = 2; DT = MatrixDescriptor<2, double>]’:
Test.cpp:50:0:   required from here
../Matrix.hpp:136:101: error: ‘multiply’ is not a member of ‘Matrix<2, MatrixDescriptor<2, double> >::MC<Matrix<2, MatrixDescriptor<2, double> > >’ {aka ‘MatrixCalculator<Matrix<2, MatrixDescriptor<2, double> >, Matrix<2, MatrixDescriptor<2, double> >, 2>’}
  136 |         decltype(auto) operator*(const Matrix<N2, D2>& m)       { return MC<Matrix<N2,D2>>::multiply(*this,m);          }
      |                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
../Matrix.hpp: In instantiation of ‘decltype(auto) Matrix<<anonymous>, <template-parameter-1-2> >::operator+(const Matrix<N2, D2>&) [with long unsigned int N2 = 2; D2 = MatrixDescriptor<2, int, int>; long unsigned int N = 2; DT = MatrixDescriptor<2, int, int>]’:
Test.cpp:64:0:   required from here
../Matrix.hpp:132:96: error: ‘add’ is not a member of ‘Matrix<2>::MC<Matrix<2> >’ {aka ‘MatrixCalculator<Matrix<2>, Matrix<2>, 2>’}
  132 |         decltype(auto) operator+(const Matrix<N2,D2>& m)        { return MC<Matrix<N2,D2>>::add(*this,m);       }
      |                                                                          ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
../Matrix.hpp: In instantiation of ‘decltype(auto) Matrix<<anonymous>, <template-parameter-1-2> >::operator-(const Matrix<N2, D2>&) [with long unsigned int N2 = 2; D2 = MatrixDescriptor<2, int, int>; long unsigned int N = 2; DT = MatrixDescriptor<2, int, int>]’:
Test.cpp:67:0:   required from here
../Matrix.hpp:134:96: error: ‘sub’ is not a member of ‘Matrix<2>::MC<Matrix<2> >’ {aka ‘MatrixCalculator<Matrix<2>, Matrix<2>, 2>’}
  134 |         decltype(auto) operator-(const Matrix<N2,D2>& m)        { return MC<Matrix<N2,D2>>::sub(*this,m);       }
      |                                                                          ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
../Matrix.hpp: In instantiation of ‘decltype(auto) Matrix<<anonymous>, <template-parameter-1-2> >::operator*(const Matrix<N2, D2>&) [with long unsigned int N2 = 1; D2 = MatrixDescriptor<1, int, int>; long unsigned int N = 2; DT = MatrixDescriptor<2, int, int>]’:
Test.cpp:68:0:   required from here
../Matrix.hpp:136:101: error: ‘multiply’ is not a member of ‘Matrix<2>::MC<Matrix<1> >’ {aka ‘MatrixCalculator<Matrix<2>, Matrix<1>, 2>’}
  136 |         decltype(auto) operator*(const Matrix<N2, D2>& m)       { return MC<Matrix<N2,D2>>::multiply(*this,m);          }
      |                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from Test.cpp:6:
../Matrix.hpp: In instantiation of ‘class Matrix<3>’:
Test.cpp:71:0:   required from here
../Matrix.hpp:25:50: error: redeclared with 2 template parameters
   25 |         template<typename,typename> friend class MatrixCalculator;
      |                                                  ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:84:7: note: previous declaration ‘template<class M1, class M2, long unsigned int S> class MatrixCalculator’ used 3 template parameters
   84 | class MatrixCalculator
      |       ^~~~~~~~~~~~~~~~
In file included from ../Matrix.hpp:10,
                 from Test.cpp:6:
../MatrixCalculator.hpp:17:53: error: template parameter ‘template<class, class, long unsigned int <anonymous> > class T’
   17 | template<template<typename, typename, size_t> class T, uint N, typename M1, typename M2>
      |                                                     ^
In file included from Test.cpp:6:
../Matrix.hpp:26:95: note: redeclared here as ‘template<class, class> class T’
   26 |         template<template<typename, typename> class T, uint, typename, typename> friend class MatrixCalculatorBase;
      |                                                                                               ^~~~~~~~~~~~~~~~~~~~
make: *** [<eingebaut>: *.o] Fehler 1
